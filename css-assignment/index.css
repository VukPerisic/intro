body {
    margin: 20px 40px;
    
  }
  
  p {
    font-size: 24px;
    font-weight: bold;
    margin-bottom: 0px;
    margin-top: 16px;
  }
  
  /*--- This is the CSS class for the green rectangular blocks. Note that it uses display: flex ---*/
  
  .wrapper {
    display: flex;
    height: 60px;
    background-color: green;
    margin-bottom: 20px;
  }
  
  /*--- flex: 1 makes it so that the div takes up all available space left in the parent element ---*/
  
  .redExample {
    flex: 1;
    background-color: red;
  }
  
  /*--- Since both .redExample and .blueExample have flex: 1, they will take up an equal amount of space because they meet in the middle ---*/
  
  .blueExample {
    flex: 1;
    background-color: blue;
  }
  
  /*--- flex-direction: row-reverse orders all child elements starting from right to left ---*/
  
  .emptyExample2 {
    display: flex;
    flex: 1;
    flex-direction: row-reverse;
  }
  
  .center_square{
    justify-content: center;
  }

  .center_items{
    align-items: center;
  }
  
  .little_red {
    background-color: red;
    width: 80px;
  }
  
  .little_blue { 
    background-color: blue;
    width: 80px;
  }
  
  .big_transparent { 
    flex: 1;
    flex-grow: 1;
  }
  
  .big_red {
    flex: 1;
    flex-grow: 1;
    background-color: red;
  }
  
  .little_red_square {
    width: 40px;
    height: 40px;
    background-color: red;
  }
  
  .blueRectangle {
    width: 80px;
    background-color: blue;
  }
  
  .stripContainer {
    background-color: transparent;
    align-items: baseline;
  }
  
  .blueStrip {
    flex: 1;
    flex-grow: 1;
    height: 30px;
    background-color: blue;
  }
  
  .orangeContainer {
    display: flex;
    justify-content: space-between;
    gap: 25.6vw;
  }
  
  .stableOrangeRectangle {
    width: 60px;
    background-color: orange;
  }

  .mediumTransparent {
    flex: 1;
    flex-grow: 1;
  }
  
  .unstableOrangeRectangle {
    width: 250px;
    background-color: orange;
  }



  /* TODO: Add CSS for the rest of your solution below */